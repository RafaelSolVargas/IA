; direcao = hidraulica, eletrica, any
(deftemplate Cliente
    (slot faixa_preco)
    (slot preferencia_transmissao)
    (slot direcao_preferencia)
    (slot estrada_de_chao))

; preco = baixo, medio, alto, luxo
; cilindradas = baixo, medio, alto
; categoria = hatch, sedan, picape_compacta, picape, suv
(deftemplate Carro
    (slot modelo)
    (slot categoria)
    (slot cilindradas)
    (slot potencia)
    (slot preco)
    (slot direcao)
    (slot transmissao_automatica))

; Criação de carros pre definidos
(defrule CarrosPredefinidos
   (declare (salience 12))
   =>
   (assert (Carro (modelo "Fiat Strada Endurance 1.4 CS") 
        (categoria "picape")
        (cilindradas 1.2)
        (potencia 97)
        (preco 80000)
        (direcao "hidraulica") 
        (transmissao_automatica "no"))
    )
   (assert (Carro (modelo "Fiat Strada Volcano 1.3 CD") 
        (categoria "picape_compacta")
        (cilindradas 1.2)
        (potencia 97)
        (preco 115000)
        (direcao "eletrica") 
        (transmissao_automatica "no"))
    )
   (assert (Carro (modelo "Volkswagen Polo 1.0 TSIS") 
        (categoria "hatch")
        (cilindradas 1.0)
        (potencia 100)
        (preco 80000)
        (direcao "eletrica") 
        (transmissao_automatica "no"))
    )
   (assert (Carro (modelo "Fiat Argo Trekking 1.3") 
        (categoria "hatch")
        (cilindradas 1.3)
        (potencia 97)
        (preco 80000)
        (direcao "eletrica") 
        (transmissao_automatica "no"))
    )
   (assert (Carro (modelo "Chevrolet Onix LT 1.0 Turbo") 
        (categoria "hatch")
        (cilindradas 1.0)
        (potencia 100)
        (preco 80000)
        (direcao "eletrica") 
        (transmissao_automatica "no"))
    )
   (assert (Carro (modelo "Volkswagen T-Cross Sense 1.0 TSI") 
        (categoria "suv")
        (cilindradas 1.0)
        (potencia 120)
        (preco 100000)
        (direcao "eletrica") 
        (transmissao_automatica "yes"))
    )
   (assert (Carro (modelo "Hyundai HB20 Platinum Plus 1.0 Turbo") 
        (categoria "hatch")
        (cilindradas 1.0)
        (potencia 120)
        (preco 80000)
        (direcao "eletrica") 
        (transmissao_automatica "yes"))
    )
   (assert (Carro (modelo "Honda Civic 2020") 
        (categoria "sedan")
        (cilindradas 2.0)
        (potencia 140)
        (preco 100000)
        (direcao "eletrica") 
        (transmissao_automatica "yes"))
    )
   (assert (Carro (modelo "Chevrolet Tracker Premier 1.2") 
        (categoria "suv")
        (cilindradas 1.2)
        (potencia 120)
        (preco 120000)
        (direcao "eletrica") 
        (transmissao_automatica "yes"))
    )
   (assert (Carro (modelo "Hyundai Creta Comfort Plus 1.0 Turbo") 
        (categoria "suv")
        (cilindradas 1.0)
        (potencia 120)
        (preco 120000)
        (direcao "eletrica") 
        (transmissao_automatica "yes"))
    )
   (assert (Carro (modelo "Nissan Kicks Sense 1.6") 
        (categoria "suv")
        (cilindradas 1.6)
        (potencia 100)
        (preco 100000)
        (direcao "eletrica") 
        (transmissao_automatica "yes"))
    )
   (assert (Carro (modelo "Fiat Mobi Like 1.0") 
        (categoria "hatch")
        (cilindradas 1.0)
        (potencia 97)
        (preco 80000)
        (direcao "hidraulica") 
        (transmissao_automatica "no"))
    )
   (assert (Carro (modelo "Toyota Hilux STD Power Pack 2.8 Turno") 
        (categoria "picape")
        (cilindradas 2.8)
        (potencia 140)
        (preco 180000)
        (direcao "hidraulica") 
        (transmissao_automatica "no"))
    )
   (assert (Carro (modelo "Toyota Corolla Cros XR 2.0") 
        (categoria "suv")
        (cilindradas 2.0)
        (potencia 140)
        (preco 120000)
        (direcao "eletrica") 
        (transmissao_automatica "yes"))
    )
   (assert (Carro (modelo "Jeep Renegade Sport 1.3") 
        (categoria "suv")
        (cilindradas 1.3)
        (potencia 140)
        (preco 120000)
        (direcao "eletrica") 
        (transmissao_automatica "yes"))
    )
   (assert (Carro (modelo "Honda HR-V Touring 1.5 Turbo") 
        (categoria "suv")
        (cilindradas 1.5)
        (potencia 140)
        (preco 180000)
        (direcao "eletrica") 
        (transmissao_automatica "yes"))
    )
   (assert (Carro (modelo "Fiat Cronos Drive S-Design 1.3") 
        (categoria "sedan")
        (cilindradas 1.3)
        (potencia 100)
        (preco 80000)
        (direcao "eletrica") 
        (transmissao_automatica "no"))
    )
   (printout t "Carros pre definidos adicionados" crlf))

(defrule titulo
   (declare (salience 11))
   =>
   (printout t crlf)
   (printout t "Sistema Especialista - Recomendacao de Carros" crlf crlf))

(defrule PerguntaFaixaPreco
(declare (salience 10))
   =>
   (printout t "Qual faixa de preco voce esta disposto a pagar?" crlf)
   (printout t "1. R$ <= 89000" crlf)
   (printout t "2. 89000 < R$ <= 109000" crlf)
   (printout t "3. 109000 < R$ <= 150000" crlf)
   (printout t "4. R$ > 150000" crlf)
   (bind ?resposta (read))
   (if (eq ?resposta 1) then
      (assert (Cliente (faixa_preco "baixo")))
   else
      (if (eq ?resposta 2) then
         (assert (Cliente (faixa_preco "medio")))
      else
         (if (eq ?resposta 3) then
            (assert (Cliente (faixa_preco "alto")))
         else
            (assert (Cliente (faixa_preco "luxo")))))))


(defrule PerguntaTransmissaoAutomatica
(declare (salience 10))
   =>
   (printout t "Voce prefere transmissao automatica? (yes/no)" crlf)
   (bind ?resposta (read))
   (assert (Cliente (preferencia_transmissao ?resposta))))


(defrule RecomendacaoCarro
(declare (salience 9))
   ?cliente_faixa <- (Cliente (faixa_preco ?faixa))
   ?cliente_transmissao <- (Cliente (preferencia_transmissao ?transmissao_cliente))
   ?carro <- (Carro (modelo ?modelo) (preco ?preco) (transmissao_automatica ?transmissao_carro))

   ; // Verifica a faixa de preço e se o carro possui a transmissão desejada
   (test (or (and (eq ?faixa "baixo") (<= ?preco 89000))
             (and (eq ?faixa "medio") (and (> ?preco 89000) (<= ?preco 109000)))
             (and (eq ?faixa "alto") (and (> ?preco 109000) (<= ?preco 150000)))
             (and (eq ?faixa "luxo") (> ?preco 150000))))
    
    ; // Verifica se o input do usuário de transmissao é o mesmo do carro, note que no carro foi declarado "xx" mas o input do usuário é somente x (Essa merda me comeu quase 40 minutos de madrugada)
    (test (or
            (and (eq ?transmissao_cliente no) (eq ?transmissao_carro "no"))
            (and (eq ?transmissao_cliente yes) (eq ?transmissao_carro "yes"))
        )
    )
   =>
   (printout t "Carro recomendado: " ?modelo crlf))
